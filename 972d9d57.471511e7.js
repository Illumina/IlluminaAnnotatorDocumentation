(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{117:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return m}));var n=a(2),r=a(6),i=(a(0),a(132)),b=a(135),c={title:"Introduction",hide_title:!0},l={id:"introduction",title:"Introduction",description:"Nirvana provides clinical-grade annotation of genomic variants (SNVs, MNVs, insertions, deletions, indels, STRs, gene fusions, and SVs (including CNVs). It can be run as a stand-alone package or integrated into larger software tools that require variant annotation.",source:"@site/docs/introduction.mdx",permalink:"/NirvanaDocumentation/introduction",editUrl:"https://github.com/Illumina/NirvanaDocumentation/edit/master/docs/introduction.mdx",sidebar:"someSidebar",next:{title:"ClinVar",permalink:"/NirvanaDocumentation/data-sources/clinvar"}},o=[{value:"What does Nirvana annotate?",id:"what-does-nirvana-annotate",children:[{value:"Variant positions",id:"variant-positions",children:[]},{value:"Samples",id:"samples",children:[]},{value:"Alternate alleles",id:"alternate-alleles",children:[]},{value:"Transcripts",id:"transcripts",children:[]},{value:"Genes",id:"genes",children:[]}]},{value:"Licensing",id:"licensing",children:[{value:"Code",id:"code",children:[]},{value:"Data",id:"data",children:[]}]},{value:"Nirvana Team",id:"nirvana-team",children:[{value:"Core Team",id:"core-team",children:[]},{value:"<em>Emeritus</em> Team",id:"emeritus-team",children:[]}]}],s={rightToc:o};function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("img",{alt:"Nirvana Logo",src:Object(b.a)("/img/NirvanaLogo.png")}),Object(i.b)("p",null,"Nirvana provides clinical-grade annotation of genomic variants (SNVs, MNVs, insertions, deletions, indels, STRs, gene fusions, and SVs (including CNVs). It can be run as a stand-alone package or integrated into larger software tools that require variant annotation."),Object(i.b)("p",null,"The input to Nirvana are VCFs and the output is a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/NirvanaDocumentation/file-formats/nirvana-json-file-format"}),"structured JSON representation")," of all annotation and sample information (as extracted from the VCF). Nirvana handles multiple alternate alleles and multiple samples with ease."),Object(i.b)("p",null,"The software is being developed under a rigorous SDLC and testing process to ensure accuracy of the results and enable embedding in other software with regulatory needs. Nirvana uses a continuous integration pipeline where millions of variant annotations are monitored against baseline values daily."),Object(i.b)("p",null,"Backronym: ",Object(i.b)("strong",{parentName:"p"},"NI"),"mble and ",Object(i.b)("strong",{parentName:"p"},"R"),"obust ",Object(i.b)("strong",{parentName:"p"},"VA"),"riant a",Object(i.b)("strong",{parentName:"p"},"N"),"not",Object(i.b)("strong",{parentName:"p"},"A"),"tor"),Object(i.b)("h2",{id:"what-does-nirvana-annotate"},"What does Nirvana annotate?"),Object(i.b)("h3",{id:"variant-positions"},"Variant positions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"chromosome & position"),Object(i.b)("li",{parentName:"ul"},"ref & alt alleles"),Object(i.b)("li",{parentName:"ul"},"quality & filters"),Object(i.b)("li",{parentName:"ul"},"cytogenetic bands")),Object(i.b)("h3",{id:"samples"},"Samples"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"genotypes"),Object(i.b)("li",{parentName:"ul"},"variant frequencies"),Object(i.b)("li",{parentName:"ul"},"allele depths"),Object(i.b)("li",{parentName:"ul"},"copy numbers"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"de novo")," variant flags")),Object(i.b)("h3",{id:"alternate-alleles"},"Alternate alleles"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"variant identifiers"),Object(i.b)("li",{parentName:"ul"},"chromosome & positions"),Object(i.b)("li",{parentName:"ul"},"ref & alt alleles"),Object(i.b)("li",{parentName:"ul"},"HGVS g. nomenclature"),Object(i.b)("li",{parentName:"ul"},"PhyloP scores"),Object(i.b)("li",{parentName:"ul"},"regulatory regions"),Object(i.b)("li",{parentName:"ul"},"recomposed variants (converting nearby SNVs that share haplotypes into MNVs)"),Object(i.b)("li",{parentName:"ul"},"external data sources (e.g. dbSNP, gnomAD, ClinVar)")),Object(i.b)("h3",{id:"transcripts"},"Transcripts"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"transcript & gene IDs"),Object(i.b)("li",{parentName:"ul"},"bio type"),Object(i.b)("li",{parentName:"ul"},"exon & intron overlap"),Object(i.b)("li",{parentName:"ul"},"cDNA, CDS, and amino acid positions"),Object(i.b)("li",{parentName:"ul"},"codons & amino acid representation"),Object(i.b)("li",{parentName:"ul"},"Sequence Ontology consequences"),Object(i.b)("li",{parentName:"ul"},"HGVS c. and p. nomenclature"),Object(i.b)("li",{parentName:"ul"},"gene fusions"),Object(i.b)("li",{parentName:"ul"},"SIFT & PolyPhen")),Object(i.b)("h3",{id:"genes"},"Genes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"gene symbol & HGNC ID"),Object(i.b)("li",{parentName:"ul"},"gene summary"),Object(i.b)("li",{parentName:"ul"},"external data sources (e.g. OMIM, gnomAD, ClinGen)")),Object(i.b)("h2",{id:"licensing"},"Licensing"),Object(i.b)("h3",{id:"code"},"Code"),Object(i.b)("p",null,"Nirvana source code is provided under the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Illumina/Nirvana/blob/develop/LICENSE"}),"GPLv3")," license. Nirvana includes several third party packages provided under other open source licenses, please see [","[Dependencies|Dependencies]","] for additional details."),Object(i.b)("h3",{id:"data"},"Data"),Object(i.b)("p",null,"The data used by Nirvana is publicly available, however some data sources have special restrictions on use by non-academic entities. "),Object(i.b)("h2",{id:"nirvana-team"},"Nirvana Team"),Object(i.b)("h3",{id:"core-team"},"Core Team"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Michael",src:Object(b.a)("/img/Michael.jpg")})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Rajat",src:Object(b.a)("/img/Rajat.jpg")})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Haochen",src:Object(b.a)("/img/Haochen.jpg")})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/michaelstromberg"}),"Michael Str\xf6mberg"))),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/rajatshuvro"}),"Rajat Shuvro Roy"))),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/haochen-li-8310b054/"}),"Haochen Li")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Project Lead")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Lead Developer")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Lead Tester"))))),Object(i.b)("h3",{id:"emeritus-team"},Object(i.b)("em",{parentName:"h3"},"Emeritus")," Team"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Julien",src:Object(b.a)("/img/Julien.jpg")})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Shuli",src:Object(b.a)("/img/Shuli.jpg")})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("img",{alt:"Yu",src:Object(b.a)("/img/Yu.jpg")})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/julienlajugie"}),"Julien Lajugie"))),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/shulik/"}),"Shuli Kang"))),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"https://www.linkedin.com/in/yu-jiang-87a06b3a"}),"Yu Jiang")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Tester")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Developer")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(i.b)("em",{parentName:"td"},"Developer"))))))}m.isMDXComponent=!0}}]);