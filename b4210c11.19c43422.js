(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{167:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),u=p(n),j=a,d=u["".concat(c,".").concat(j)]||u[j]||O[j]||l;return n?r.a.createElement(d,b(b({ref:t},o),{},{components:n})):r.a.createElement(d,b({ref:t},o))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=j;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:a,c[1]=b;for(var o=2;o<l;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),l=(n(0),n(167)),c={},b={unversionedId:"data-sources/clingen-json",id:"data-sources/clingen-json",isDocsHomePage:!1,title:"clingen-json",description:"`json",source:"@site/docs/data-sources/clingen-json.md",slug:"/data-sources/clingen-json",permalink:"/NirvanaDocumentation/data-sources/clingen-json",editUrl:"https://github.com/Illumina/NirvanaDocumentation/edit/master/docs/data-sources/clingen-json.md",version:"current"},i=[],o={rightToc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'"clingen":[\n   {\n      "chromosome":"17",\n      "begin":525,\n      "end":14667519,\n      "variantType":"copy_number_gain",\n      "id":"nsv996083",\n      "clinicalInterpretation":"pathogenic",\n      "observedGains":1,\n      "validated":true,\n      "phenotypes":[\n         "Intrauterine growth retardation"\n      ],\n      "phenotypeIds":[\n         "HP:0001511",\n         "MedGen:C1853481"\n      ],\n      "reciprocalOverlap":0.00131\n   },\n   {\n      "chromosome":"17",\n      "begin":45835,\n      "end":7600330,\n      "variantType":"copy_number_loss",\n      "id":"nsv869419",\n      "clinicalInterpretation":"pathogenic",\n      "observedLosses":1,\n      "validated":true,\n      "phenotypes":[\n         "Developmental delay AND/OR other significant developmental or morphological phenotypes"\n      ],\n      "reciprocalOverlap":0.00254\n   }\n]\n')),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Notes"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"clingen"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"object array"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"chromosome"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Ensembl-style chromosome names")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"begin"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1-based position")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"end"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1-based position")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"variantType"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Any of the\xa0sequence alterations defined here.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Identifier from the data source. Alternatively a VID")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"clinicalInterpretation"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"see possible values below")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"observedGains"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Range: 0 - (2",Object(l.b)("sup",null,"31"),"\xa0- 1). Only used if copy_number_variation, copy_number_loss, or copy_number_gain.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"observedLosses"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Range: 0 - (2",Object(l.b)("sup",null,"31"),"\xa0- 1). Only used if copy_number_variation, copy_number_loss, or copy_number_gain.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"validated"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"phenotypes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string array"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Description of the phenotype.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"phenotypeIds"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string array"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Description of the phenotype IDs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"reciprocalOverlap"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"floating point"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Range: 0 - 1. E.g. 0.57 would indicate a 57% reciprocal overlap. Specified up to 5 decimal places (Not reported for Insertions).")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"clinicalInterpretation")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"benign"),Object(l.b)("li",{parentName:"ul"},"curated benign"),Object(l.b)("li",{parentName:"ul"},"curated pathogenic"),Object(l.b)("li",{parentName:"ul"},"likely benign"),Object(l.b)("li",{parentName:"ul"},"likely pathogenic"),Object(l.b)("li",{parentName:"ul"},"path gain"),Object(l.b)("li",{parentName:"ul"},"path loss"),Object(l.b)("li",{parentName:"ul"},"pathogenic"),Object(l.b)("li",{parentName:"ul"},"uncertain")))}p.isMDXComponent=!0}}]);