(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{167:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,b=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),s=p(a),O=n,j=s["".concat(b,".").concat(O)]||s[O]||m[O]||c;return a?r.a.createElement(j,l(l({ref:t},o),{},{components:a})):r.a.createElement(j,l({ref:t},o))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,b=new Array(c);b[0]=O;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,b[1]=l;for(var o=2;o<c;o++)b[o]=a[o];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},53:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),c=(a(0),a(167)),b={},l={unversionedId:"data-sources/mitomap-small-variants-json",id:"version-3.14/data-sources/mitomap-small-variants-json",isDocsHomePage:!1,title:"mitomap-small-variants-json",description:"`json",source:"@site/versioned_docs/version-3.14/data-sources/mitomap-small-variants-json.md",slug:"/data-sources/mitomap-small-variants-json",permalink:"/NirvanaDocumentation/3.14/data-sources/mitomap-small-variants-json",editUrl:"https://github.com/Illumina/NirvanaDocumentation/edit/master/versioned_docs/version-3.14/data-sources/mitomap-small-variants-json.md",version:"3.14"},i=[],o={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'"mitomap":[ \n   { \n      "refAllele":"G",\n      "altAllele":"A",\n      "diseases":[ \n         "Bipolar disorder",\n         "Melanoma"\n      ],\n      "hasHomoplasmy":false,\n      "hasHeteroplasmy":true,\n      "status":"Reported",\n      "clinicalSignificance":"confirmed pathogenic",\n      "scorePercentile":83.30,\n      "numGenBankFullLengthSeqs":2,\n      "pubMedIds":["2316527","6299878","6301949"],\n      "isAlleleSpecific":true\n   }\n]\n')),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Field"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Notes"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"refAllele"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"altAllele"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"diseases"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string array"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"associated diseases")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"hasHomoplasmy"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"hasHeteroplasmy"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"status"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"record status")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"clinicalSignificance"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"predicted pathogenicity")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"scorePercentile"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"float"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"MitoTIP score")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"numGenBankFullLengthSeqs"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"integer"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"# of GenBank full-length sequences")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"pubMedIds"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string array"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"isAlleleSpecific"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"true when the current variant alternate allele matches the MITOMAP alternate allele")))))}p.isMDXComponent=!0}}]);